openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8088
  description: Generated server url
tags:
- name: Actuator
  description: Monitor and interact
  externalDocs:
    description: Spring Boot Actuator Web API Documentation
    url: https://docs.spring.io/spring-boot/docs/current/actuator-api/html/
paths:
  /persons:
    get:
      tags:
      - person-controller
      operationId: findAll
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
    post:
      tags:
      - person-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Person'
  /interviews:
    get:
      tags:
      - interview-controller
      operationId: findAll_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interview'
    post:
      tags:
      - interview-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interview'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Interview'
  /forms:
    get:
      tags:
      - form-controller
      operationId: findAll_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Form'
    post:
      tags:
      - form-controller
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Form'
  /forms/{formId}/questions:
    post:
      tags:
      - form-controller
      operationId: createQuestions
      parameters:
      - name: formId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionAnswer'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QuestionAnswer'
  /actuator/loggers/{name}:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'loggers-name'
      operationId: loggers-name
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
    post:
      tags:
      - Actuator
      summary: Actuator web endpoint 'loggers-name'
      operationId: loggers-name_2
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
              enum:
              - TRACE
              - DEBUG
              - INFO
              - WARN
              - ERROR
              - FATAL
              - "OFF"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /persons/{id}:
    get:
      tags:
      - person-controller
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Person'
  /interviews/{id}:
    get:
      tags:
      - interview-controller
      operationId: findById_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Interview'
  /forms/{id}:
    get:
      tags:
      - form-controller
      operationId: findById_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Form'
  /actuator:
    get:
      tags:
      - Actuator
      summary: Actuator root web endpoint
      operationId: links
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Link'
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Link'
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Link'
  /actuator/threaddump:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'threaddump'
      operationId: threaddump
      responses:
        "200":
          description: OK
          content:
            text/plain;charset=UTF-8:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/scheduledtasks:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'scheduledtasks'
      operationId: scheduledtasks
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/metrics:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'metrics'
      operationId: metrics
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/metrics/{requiredMetricName}:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'metrics-requiredMetricName'
      operationId: metrics-requiredMetricName
      parameters:
      - name: requiredMetricName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/mappings:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'mappings'
      operationId: mappings
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/loggers:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'loggers'
      operationId: loggers
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/info:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'info'
      operationId: info
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/heapdump:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'heapdump'
      operationId: heapdump
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
  /actuator/health:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'health'
      operationId: health
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/health/**:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'health-path'
      operationId: health-path
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/env:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'env'
      operationId: env
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/env/{toMatch}:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'env-toMatch'
      operationId: env-toMatch
      parameters:
      - name: toMatch
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/configprops:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'configprops'
      operationId: configprops
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/configprops/{prefix}:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'configprops-prefix'
      operationId: configprops-prefix
      parameters:
      - name: prefix
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/conditions:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'conditions'
      operationId: conditions
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/caches:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'caches'
      operationId: caches
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
    delete:
      tags:
      - Actuator
      summary: Actuator web endpoint 'caches'
      operationId: caches_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /actuator/caches/{cache}:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'caches-cache'
      operationId: caches-cache
      parameters:
      - name: cache
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
    delete:
      tags:
      - Actuator
      summary: Actuator web endpoint 'caches-cache'
      operationId: caches-cache_2
      parameters:
      - name: cache
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
  /actuator/beans:
    get:
      tags:
      - Actuator
      summary: Actuator web endpoint 'beans'
      operationId: beans
      responses:
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
            application/json:
              schema:
                type: object
components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: string
          format: uuid
        lastName:
          type: string
        firstName:
          type: string
        isManager:
          type: boolean
    Form:
      type: object
      properties:
        id:
          type: string
          format: uuid
        questions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QuestionAnswer'
    Interview:
      type: object
      properties:
        id:
          type: string
          format: uuid
        date:
          type: string
          format: date-time
        manager:
          $ref: '#/components/schemas/Person'
        employee:
          $ref: '#/components/schemas/Person'
        form:
          $ref: '#/components/schemas/Form'
    QuestionAnswer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        question:
          type: string
        answer:
          type: string
        form:
          $ref: '#/components/schemas/Form'
    Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
