openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8088
  description: Generated server url
paths:
  /persons:
    get:
      tags:
      - person-controller
      operationId: findAll
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
    post:
      tags:
      - person-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Person'
  /interviews:
    get:
      tags:
      - interview-controller
      operationId: findAll_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interview'
    post:
      tags:
      - interview-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interview'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Interview'
  /forms:
    get:
      tags:
      - form-controller
      operationId: findAll_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Form'
    post:
      tags:
      - form-controller
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Form'
  /forms/{formId}/questions:
    post:
      tags:
      - form-controller
      operationId: createQuestions
      parameters:
      - name: formId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionAnswer'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QuestionAnswer'
  /persons/{id}:
    get:
      tags:
      - person-controller
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Person'
  /interviews/{id}:
    get:
      tags:
      - interview-controller
      operationId: findById_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Interview'
  /forms/{id}:
    get:
      tags:
      - form-controller
      operationId: findById_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Form'
components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: string
          format: uuid
        lastName:
          type: string
        firstName:
          type: string
        isManager:
          type: boolean
    Form:
      type: object
      properties:
        id:
          type: string
          format: uuid
        questions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QuestionAnswer'
    Interview:
      type: object
      properties:
        id:
          type: string
          format: uuid
        date:
          type: string
          format: date-time
        manager:
          $ref: '#/components/schemas/Person'
        employee:
          $ref: '#/components/schemas/Person'
        form:
          $ref: '#/components/schemas/Form'
    QuestionAnswer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        question:
          type: string
        answer:
          type: string
        form:
          $ref: '#/components/schemas/Form'
