plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'io.freefair.lombok' version "8.6"

    id "com.diffplug.spotless" version "6.23.3"

}

group = 'dev.t3p'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    runtimeOnly 'org.postgresql:postgresql'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.12.3'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '3.2.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

apply from: "gradle/unit-test.gradle"
apply from: "gradle/integration-test.gradle"
apply from: "gradle/system-test.gradle"
apply from: "gradle/spotless.gradle"


systemTest {
    shouldRunAfter integrationTest
}

tasks.register('copyDockerCompose', Copy) {
    ["./src/integration-test/resources","./src/system-test/resources"].forEach {dest ->
        copy {
            println(dest)
            from(layout.projectDirectory.file("./docker/docker-compose-postgresql.yml"))
            into layout.projectDirectory.dir(dest)

        }
        // cf https://dzone.com/articles/gradle-copy-to-multiple-destinations
    }

}
tasks.compileJava.dependsOn('copyDockerCompose')
